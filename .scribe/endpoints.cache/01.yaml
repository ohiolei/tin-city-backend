## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Routes Management'
description: |-

  APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

  These endpoints handle both public and admin operations for static routes.

  Base URL: `/api/v1/routes`
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/routes/export
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Export all static routes in JSON format for mobile app usage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "exported_at": "2025-10-18T15:00:00Z",
            "routes": [...]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/routes
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of all available routes.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Terminus to Bukuru",
                "encoded_polyline": "mfp_Ijk~hE...",
                "distance": 8.3,
                "created_at": "2025-10-18T12:00:00Z"
              }
            ]
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/routes/{id}'
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific route by ID.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the route.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Terminus to Bukuru",
              "encoded_polyline": "mfp_Ijk~hE...",
              "distance": 8.3,
              "created_at": "2025-10-18T12:00:00Z"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 404
        content: '{"error": "Route not found"}'
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/routes
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created route (Admin only).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the route.'
        required: true
        example: 'Terminus to Bukuru'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_point:
        name: start_point
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_point:
        name: end_point
        description: 'Must not be greater than 255 characters.'
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      encoded_polyline:
        name: encoded_polyline
        description: 'Google Maps encoded polyline representing the route path.'
        required: true
        example: 'mfp_Ijk~hEo}@yDa@e...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      distance_km:
        name: distance_km
        description: 'Must be at least 0.'
        required: true
        example: 39
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stops:
        name: stops
        description: 'Optional list of stops related to the route.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].name':
        name: 'stops[].name'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].latitude':
        name: 'stops[].latitude'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].longitude':
        name: 'stops[].longitude'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].order_index':
        name: 'stops[].order_index'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      distance:
        name: distance
        description: 'The total distance (in km).'
        required: true
        example: 8.3
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Terminus to Bukuru'
      start_point: 'n'
      end_point: g
      encoded_polyline: 'mfp_Ijk~hEo}@yDa@e...'
      distance_km: 39
      stops:
        - architecto
      distance: 8.3
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Terminus to Bukuru",
              "encoded_polyline": "mfp_Ijk~hE...",
              "distance": 8.3,
              "created_at": "2025-10-18T12:00:00Z"
            }
          }
        headers: []
        description: Created
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/routes/{route_id}'
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing route (Admin only).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      route_id:
        name: route_id
        description: 'The ID of the route.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      route:
        name: route
        description: 'The ID of the route to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      route_id: 16
      route: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'optional The updated name of the route.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_point:
        name: start_point
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_point:
        name: end_point
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      encoded_polyline:
        name: encoded_polyline
        description: 'optional Updated Google Maps polyline.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      distance_km:
        name: distance_km
        description: 'Must be at least 0.'
        required: false
        example: 39
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stops:
        name: stops
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].name':
        name: 'stops[].name'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].latitude':
        name: 'stops[].latitude'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].longitude':
        name: 'stops[].longitude'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'stops[].order_index':
        name: 'stops[].order_index'
        description: 'This field is required when <code>stops</code> is present.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      distance:
        name: distance
        description: 'optional Updated distance (in km).'
        required: false
        example: 4326.41688
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      start_point: 'n'
      end_point: g
      encoded_polyline: architecto
      distance_km: 39
      stops:
        -
          name: architecto
          latitude: 4326.41688
          longitude: 4326.41688
          order_index: 16
      distance: 4326.41688
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Terminus to Bukuru (Updated)",
              "encoded_polyline": "xyz123...",
              "distance": 9.1
            }
          }
        headers: []
        description: Updated
        custom: []
      -
        status: 403
        content: '{"error": "You are not authorized to perform this action"}'
        headers: []
        description: Forbidden
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/routes/{route_id}'
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a route (Admin only).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      route_id:
        name: route_id
        description: 'The ID of the route.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      route:
        name: route
        description: 'The ID of the route to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      route_id: 16
      route: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Route deleted successfully"}'
        headers: []
        description: Deleted
        custom: []
      -
        status: 404
        content: '{"error": "Route not found"}'
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: 'Routes Management'
      groupDescription: |-

        APIs for managing and retrieving bus routes within the Jos Metro BOSS system.

        These endpoints handle both public and admin operations for static routes.

        Base URL: `/api/v1/routes`
      subgroup: ''
      subgroupDescription: ''
      title: 'Authenticate a user (testing endpoint).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: test@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: test@example.com
      password: password
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
              "id": 1,
              "name": "Test Admin",
              "email": "test@example.com",
              "role": "admin"
            },
            "token": "1|XyzABC123..."
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: '{"message": "Invalid credentials"}'
        headers: []
        description: Unauthorized
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
